[tool.poetry]
name = "testing-exercises"
version = "0.1.0"
description = ""
authors = ["Octopulus96 <octopulus96@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "3.12.0"
pytest = "7.2.1"
pytest-cov = "^5.0.0"
faker = "^24.4.0"
mypy = "^1.9.0"
pylint = "^3.1.0"
pylint-pytest = "^1.1.7"
pytest-mypy = "^0.10.3"
pytest-mypy-testing = "^0.1.3"
black = "^24.3.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = "--cov=. --cov-config=.coveragerc --cov-fail-under=20 --cov-report=term"
filterwarnings = ["ignore::DeprecationWarning"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
disallow_untyped_defs = true
check_untyped_defs = true
warn_redundant_casts = true
show_error_context = true
show_column_numbers = true
force_uppercase_builtins = true
force_union_syntax = true
pretty = true
exclude = 'functions/*$'
files = ["tests/*.py"]
ignore_missing_imports = true
disable_error_code = ["return-value", "operator"]

[tool.pylint]
py-version = "3.12"
load-plugins = ["pylint_pytest"]
ignore = ['functions']
disable = '''
    missing-docstring,
    missing-module-docstring,
    missing-class-docstring,
    missing-function-docstring,
    attr-defined,
    return-value,
    unknown-option-value,
    redefined-outer-name,
'''
ignore-imports = true

[tool.black]
line-length = 105
target-version = ['py312']
include = '\.py?$'
exclude = '''
/(
    |.git
    |.mypy_cache
    |.venv
    |pyproject\.toml
    |poetry\.lock
    |.editorconfig
    |.gitignore
    |.pre-commit-config\.yaml
    |.pytest_cache
    |.coveragerc
    |.coverage
    |cov\.xml
    |functions/
  )/
'''
unstable = true
